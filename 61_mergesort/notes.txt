Rotating Cocoa: Perry Huang, Samantha Hua, Eric He
APCS pd07
HW61 -- Instructions so Simple...
2022-02-08
time spent: 1.3 hrs


DISCO
------------------------------------------------
* We realized that when you merge 2 arrays and
reach the end of one array, the subsequent values
in the other array are greater than all the values
that have already been merged, so you can just add
all the values to the end.
* We used a variation of Insertion Sort to our
other method because we slowly added values to our
sorted region using merge.
* We used the principle that a one item array is
always sorted so we always started out with a sorted
array in our sorted method.
================================================


QCC
------------------------------------------------
* Can we use recursion to merge and sort an unordered
array?
* Is it more efficient to use recursion in the sort
method rather than Insertion Sort even though it would
take up more memory?
* Is there a way to divide and conquer with the code
like we did in class?
================================================

HW60: A Termite is-a Turtle, a Thinker is-a Turtle
2022-02-07

Observables:
 * Some turtles were confused on their job. This was impacted by the way other
   turtles were misinforming other turtles. --> Create simple and easy to follow
   tasks
 * Many turtles were needed to properly execute the algorithm
 * Some turtles forgot who had given them their cards which broke the algorithm

DISCO:
 * The instructions have to be simple and straight forward or turtles will get
 confused
 * The algo is only as strong as the weakest link. It only takes one turtle
 who doesn't understand their job to mess up the whole process

QCC:
 * Is there a java equivalent for turtles in NetLogo?
 * Does the fact that more turtles are being used decrease efficiency? (More
 memory is needed)

THINKER FIRMWARE:
 * If you have one card, hand it back to the turtle who gave it to you
 * If you have given and received two piles of cards, sort them.
 * Sort cards using the specified algorithm where you continue to check the top
 cards of both piles and compare them.
 * Once sorted, give the cards back to the turtle who gave those cards to you.
